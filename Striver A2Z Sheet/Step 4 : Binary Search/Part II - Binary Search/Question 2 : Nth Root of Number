"""
Problem Statement: Given two numbers N and M, find the Nth root of M. The nth root of a number M is defined as a number X when raised to the power N equals M. If the 'nth root is not an integer, return -1.

Examples

Example 1:
Input Format: N = 3, M = 27
Result: 3
Explanation: The cube root of 27 is equal to 3.

Example 2:
Input Format: N = 4, M = 69
Result: -1
Explanation: The 4th root of 69 does not exist. So, the answer is -1.
"""

#Code

def func(mid,number,root):
    res = 1
    for i in range(1,root+1):
        res *= mid
        if res > number:
            return 2
    if res == number:
        return 1
    return -1

def nthroot(number,root):
    left = 1
    right = number 
    while left<=right:
        mid = (left+right)//2
        midN = func(mid,number,root)
        if midN == 1:
            return mid
        elif midN == 0:
            left = mid+1
        else:
            right = mid-1
    return -1

number = 27
root = 3
print(nthroot(number,root))