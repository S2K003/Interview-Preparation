#Selection Sorting
arr = [50,40,30,20,10]
n = len(arr)
for i in range(n):
    min_idx = i 
    for j in range(i+1,n):
        if arr[j] < arr[min_idx]:
            min_idx = j
    arr[i],arr[min_idx] = arr[min_idx],arr[i]
print(arr)

#Bubble Sorting
arr = [50,40,30,20,10]
n = len(arr)
for i in range(n):
    swapped = False
    for j in range(n-i-1):
        if arr[j] > arr[j+1]:
            arr[j+1],arr[j] = arr[j],arr[j+1]
            swapped = True
    if not swapped:
        break
print(arr)

#Insertion Sort
arr = [50,40,30,20,10]
n = len(arr)
for i in range(1,n):
    key = arr[i] 
    j = i-1
    while j>=0 and key<arr[j]:
        arr[j+1] = arr[j]
        j-=1
    arr[j+1] = key
print(arr)

#Merge Sort

#Merge Function
def merge(arr,l,m,r):
    n1 = m-l+1
    n2 = r-m
    
    left_array = [0] * n1
    right_array = [0] * n2
    
    for i in range(n1):
        left_array[i] = arr[l+i]
    
    for j in range(n2):
        right_array[j] = arr[m+j+1]
    
    i,j,k = 0,0,l
    while i<n1 and j<n2:
        if left_array[i] <= right_array[j]:
            arr[k] = left_array[i]
            i+=1
        else:
            arr[k] = right_array[j]
            j+=1
        k+=1
    
    while i<n1:
        arr[k] = left_array[i]
        i+=1
        k+=1
    
    while j<n2:
        arr[k] = right_array[j]
        j+=1
        k+=1 
        
#Merger_sort Function
def merge_sort(arr,l,r):
    if l<r:
        m = l + (r-l) // 2
        merge_sort(arr,0,m)
        merge_sort(arr,m+1,r)
        merge(arr,l,m,r)


#Main Function
if __name__ == "__main__":
    arr = [50,40,30,20,10]
    n = len(arr)
    merge_sort(arr,0,n-1)
    print(arr)


#Quick Sort
#Partition Function
def partition(arr,low,high):
    pivot = arr[high]
    i=low-1
    
    for j in range(low,high):
        if arr[j] < pivot:
            i+=1
            swap(arr,i,j)
    
    swap(arr,i+1,high)
    return i+1

def swap(arr,i,j):
    arr[i],arr[j] = arr[j],arr[i]
    
#Quicksort
def quicksort(arr,low,high):
    if low<high:
        p = partition(arr,low,high)
        
        quicksort(arr,low,p-1)
        quicksort(arr,p+1,high)


#Main Function
if __name__ == "__main__":
    arr = [50,40,30,20,10]
    n = len(arr)
    quicksort(arr,0,n-1)
    print(arr)