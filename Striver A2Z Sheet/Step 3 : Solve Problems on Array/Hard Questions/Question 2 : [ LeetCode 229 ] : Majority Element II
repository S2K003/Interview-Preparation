"""
https://leetcode.com/problems/majority-element-ii/description/
Given an integer array of size n, find all elements that appear more than âŒŠ n/3 âŒ‹ times.

Example 1:
Input: nums = [3,2,3]
Output: [3]

Example 2:
Input: nums = [1]
Output: [1]

Example 3:
Input: nums = [1,2]
Output: [1,2]
"""

#Code
class Solution(object):
    def majorityElement(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        res = []
        mp = {}
        for i in range(len(nums)):
            mp[nums[i]] = mp.get(nums[i],0) + 1
        n = len(nums)
        threshold = n//3
        for item,value in mp.items():
            if value>threshold:
                res.append(item)
        return res
                

        