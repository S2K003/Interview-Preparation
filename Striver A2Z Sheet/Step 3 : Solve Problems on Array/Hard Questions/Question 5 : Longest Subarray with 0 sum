"""
Given an array arr[] of size n, the task is to find the length of the longest subarray with sum equal to 0.

Examples:

Input: arr[] = {15, -2, 2, -8, 1, 7, 10, 23}
Output: 5
Explanation: The longest subarray with sum equals to 0 is {-2, 2, -8, 1, 7}


Input: arr[] = {1, 2, 3}
Output: 0
Explanation: There is no subarray with 0 sum


Input:  arr[] = {1, 0, 3}
Output:  1
Explanation: The longest sub-array with sum equal to 0 is {0}
"""

#Code
def longest_subarray(nums):
    prefix_sum = {}
    sum = 0
    max_len = 0
    for i in range(len(nums)):
        sum+=nums[i]
        if sum==0:
            max_len = i+1
        if sum in prefix_sum:
            max_len = max(max_len,i-prefix_sum[sum])
        else:
            prefix_sum[sum] = i
    
    return max_len
    
if __name__ == "__main__":
    nums = [15, -2, 2, -8, 1, 7, 10, 23]
    print(longest_subarray(nums))