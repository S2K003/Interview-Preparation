#Brute Force Approach
"""
Given two positive integers a and b, find GCD of a and b.

Note: Don't use the inbuilt gcd function

Examples:

Input: a = 3, b = 6
Output: 3
Explanation: GCD of 3 and 6 is 3
Input: a = 1, b = 1
Output: 1
Explanation: GCD of 1 and 1 is 1
https://www.geeksforgeeks.org/problems/gcd-of-two-numbers3459/1
"""
def findgcd(n1,n2):
    for i in range(min(n1,n2),0,-1):
        if n1%i ==0 and n2%i==0:
            return i
    
    return 1

if __name__ == "__main__":
    n1 = 20
    n2 = 15
    gcd = findgcd(n1, n2)
    print(gcd)

#Optimal Approach
def find_gcd(a, b):
    while a > 0 and b > 0:
        if a > b:
            a = a % b
        else:
            b = b % a
    if a == 0:
        return b
    return a


if __name__ == "__main__":
    n1 = 20
    n2 = 15
    gcd = find_gcd(n1, n2)
    print(gcd)



    
                                
                            

